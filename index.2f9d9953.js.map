{"mappings":"ACIA,IAAM,EAAQ,SAAS,gBAAgB,CAAC,MAElC,EAAW,EAAE,CACb,EAAY,EAAE,CAEf,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CACG,EAAe,EAAG,YAAY,CAAC,eAAe,UAAU,CAAC,UAAW,IACpE,EAAS,OAAO,GAEtB,EAAS,IAAI,CAAC,CAAE,QAAS,EAAI,OAAQ,CAAO,EAC9C,C,C,M,E,CALK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,EA0BL,AAnBA,SAAkB,CAAI,EACpB,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EAAoB,OAAA,EAAE,MAAM,CAAG,EAAE,MAAM,A,GAEvC,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,EAAK,OAAO,CAAC,SAAC,CAAd,EAAuB,OAAA,EAAG,WAAW,CAAC,EAAK,OAAO,C,EACpD,EAaS,GACT,AAZA,SAAsB,CAAI,EACnB,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAU,IAAI,CAAC,CACb,KAAM,EAAG,WAAW,CAAC,IAAI,GACzB,SAAU,EAAG,YAAY,CAAC,iBAC1B,OAAQ,EAAG,YAAY,CAAC,eACxB,IAAK,EAAG,YAAY,CAAC,WACvB,E,C,C,M,E,CANG,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAQP,EAGa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar lists = document.querySelectorAll(\"li\");\nvar salaries = [];\nvar employees = [];\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = lists[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var li = _step.value;\n        var salaryString = li.getAttribute(\"data-salary\").replaceAll(/[^0-9]/g, \"\");\n        var salary = Number(salaryString);\n        salaries.push({\n            element: li,\n            salary: salary\n        });\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nfunction sortList(list) {\n    list.sort(function(a, b) {\n        return b.salary - a.salary;\n    });\n    var ul = document.querySelector(\"ul\");\n    list.forEach(function(item) {\n        return ul.appendChild(item.element);\n    });\n}\nfunction getEmployees(list) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var li = _step.value;\n            employees.push({\n                name: li.textContent.trim(),\n                position: li.getAttribute(\"data-position\"),\n                salary: li.getAttribute(\"data-salary\"),\n                age: li.getAttribute(\"data-age\")\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nsortList(salaries);\ngetEmployees(lists);\n\n//# sourceMappingURL=index.2f9d9953.js.map\n","'use strict';\n\n// write code here\n\nconst lists = document.querySelectorAll('li');\n\nconst salaries = [];\nconst employees = [];\n\nfor (const li of lists) {\n  const salaryString = li.getAttribute('data-salary').replaceAll(/[^0-9]/g, '');\n  const salary = Number(salaryString);\n\n  salaries.push({ element: li, salary: salary });\n}\n\nfunction sortList(list) {\n  list.sort((a, b) => b.salary - a.salary);\n\n  const ul = document.querySelector('ul');\n\n  list.forEach((item) => ul.appendChild(item.element));\n}\n\nfunction getEmployees(list) {\n  for (const li of list) {\n    employees.push({\n      name: li.textContent.trim(),\n      position: li.getAttribute('data-position'),\n      salary: li.getAttribute('data-salary'),\n      age: li.getAttribute('data-age'),\n    });\n  }\n}\n\nsortList(salaries);\ngetEmployees(lists);\n"],"names":["lists","document","querySelectorAll","salaries","employees","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","li","value","salaryString","getAttribute","replaceAll","salary","Number","push","element","err","return","sortList","list","sort","a","b","ul","querySelector","forEach","item","appendChild","getEmployees","name","textContent","trim","position","age"],"version":3,"file":"index.2f9d9953.js.map"}